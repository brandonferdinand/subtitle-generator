{
  "cells": [
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "id": "1HJnmxdrGtbG",
        "outputId": "666d3045-29aa-445b-ed18-ebdb8fa2088c"
      },
      "outputs": [
        {
          "name": "stdout",
          "output_type": "stream",
          "text": [
            "Requirement already satisfied: transformers in /Users/brandon/opt/anaconda3/envs/py/lib/python3.7/site-packages (4.30.1)\n",
            "Requirement already satisfied: moviepy in /Users/brandon/opt/anaconda3/envs/py/lib/python3.7/site-packages (1.0.3)\n",
            "Requirement already satisfied: requests in /Users/brandon/opt/anaconda3/envs/py/lib/python3.7/site-packages (from transformers) (2.29.0)\n",
            "Requirement already satisfied: pyyaml>=5.1 in /Users/brandon/opt/anaconda3/envs/py/lib/python3.7/site-packages (from transformers) (6.0)\n",
            "Requirement already satisfied: regex!=2019.12.17 in /Users/brandon/opt/anaconda3/envs/py/lib/python3.7/site-packages (from transformers) (2022.10.31)\n",
            "Requirement already satisfied: tokenizers!=0.11.3,<0.14,>=0.11.1 in /Users/brandon/opt/anaconda3/envs/py/lib/python3.7/site-packages (from transformers) (0.13.3)\n",
            "Requirement already satisfied: importlib-metadata in /Users/brandon/opt/anaconda3/envs/py/lib/python3.7/site-packages (from transformers) (4.11.3)\n",
            "Requirement already satisfied: tqdm>=4.27 in /Users/brandon/opt/anaconda3/envs/py/lib/python3.7/site-packages (from transformers) (4.65.0)\n",
            "Requirement already satisfied: numpy>=1.17 in /Users/brandon/opt/anaconda3/envs/py/lib/python3.7/site-packages (from transformers) (1.21.5)\n",
            "Requirement already satisfied: huggingface-hub<1.0,>=0.14.1 in /Users/brandon/opt/anaconda3/envs/py/lib/python3.7/site-packages (from transformers) (0.15.1)\n",
            "Requirement already satisfied: packaging>=20.0 in /Users/brandon/opt/anaconda3/envs/py/lib/python3.7/site-packages (from transformers) (22.0)\n",
            "Requirement already satisfied: safetensors>=0.3.1 in /Users/brandon/opt/anaconda3/envs/py/lib/python3.7/site-packages (from transformers) (0.3.1)\n",
            "Requirement already satisfied: filelock in /Users/brandon/opt/anaconda3/envs/py/lib/python3.7/site-packages (from transformers) (3.12.1)\n",
            "Requirement already satisfied: proglog<=1.0.0 in /Users/brandon/opt/anaconda3/envs/py/lib/python3.7/site-packages (from moviepy) (0.1.10)\n",
            "Requirement already satisfied: imageio-ffmpeg>=0.2.0 in /Users/brandon/opt/anaconda3/envs/py/lib/python3.7/site-packages (from moviepy) (0.4.8)\n",
            "Requirement already satisfied: decorator<5.0,>=4.0.2 in /Users/brandon/opt/anaconda3/envs/py/lib/python3.7/site-packages (from moviepy) (4.4.2)\n",
            "Requirement already satisfied: imageio<3.0,>=2.5 in /Users/brandon/opt/anaconda3/envs/py/lib/python3.7/site-packages (from moviepy) (2.31.0)\n",
            "Requirement already satisfied: fsspec in /Users/brandon/opt/anaconda3/envs/py/lib/python3.7/site-packages (from huggingface-hub<1.0,>=0.14.1->transformers) (2023.1.0)\n",
            "Requirement already satisfied: typing-extensions>=3.7.4.3 in /Users/brandon/opt/anaconda3/envs/py/lib/python3.7/site-packages (from huggingface-hub<1.0,>=0.14.1->transformers) (4.3.0)\n",
            "Requirement already satisfied: pillow>=8.3.2 in /Users/brandon/opt/anaconda3/envs/py/lib/python3.7/site-packages (from imageio<3.0,>=2.5->moviepy) (9.5.0)\n",
            "Requirement already satisfied: urllib3<1.27,>=1.21.1 in /Users/brandon/opt/anaconda3/envs/py/lib/python3.7/site-packages (from requests->transformers) (1.26.15)\n",
            "Requirement already satisfied: idna<4,>=2.5 in /Users/brandon/opt/anaconda3/envs/py/lib/python3.7/site-packages (from requests->transformers) (3.4)\n",
            "Requirement already satisfied: certifi>=2017.4.17 in /Users/brandon/opt/anaconda3/envs/py/lib/python3.7/site-packages (from requests->transformers) (2022.12.7)\n",
            "Requirement already satisfied: charset-normalizer<4,>=2 in /Users/brandon/opt/anaconda3/envs/py/lib/python3.7/site-packages (from requests->transformers) (3.1.0)\n",
            "Requirement already satisfied: zipp>=0.5 in /Users/brandon/opt/anaconda3/envs/py/lib/python3.7/site-packages (from importlib-metadata->transformers) (3.11.0)\n"
          ]
        }
      ],
      "source": [
        "!pip install transformers moviepy"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "id": "Zp_EzDouGtbL",
        "outputId": "81e49138-0a72-407a-8b53-2501043f7a4a"
      },
      "outputs": [
        {
          "name": "stdout",
          "output_type": "stream",
          "text": [
            "Requirement already satisfied: torchaudio in /Users/brandon/opt/anaconda3/envs/py/lib/python3.7/site-packages (0.13.1)\n",
            "Requirement already satisfied: torch==1.13.1 in /Users/brandon/opt/anaconda3/envs/py/lib/python3.7/site-packages (from torchaudio) (1.13.1)\n",
            "Requirement already satisfied: typing-extensions in /Users/brandon/opt/anaconda3/envs/py/lib/python3.7/site-packages (from torch==1.13.1->torchaudio) (4.3.0)\n",
            "Requirement already satisfied: transformers in /Users/brandon/opt/anaconda3/envs/py/lib/python3.7/site-packages (4.30.1)\n",
            "Requirement already satisfied: packaging>=20.0 in /Users/brandon/opt/anaconda3/envs/py/lib/python3.7/site-packages (from transformers) (22.0)\n",
            "Requirement already satisfied: regex!=2019.12.17 in /Users/brandon/opt/anaconda3/envs/py/lib/python3.7/site-packages (from transformers) (2022.10.31)\n",
            "Requirement already satisfied: requests in /Users/brandon/opt/anaconda3/envs/py/lib/python3.7/site-packages (from transformers) (2.29.0)\n",
            "Requirement already satisfied: filelock in /Users/brandon/opt/anaconda3/envs/py/lib/python3.7/site-packages (from transformers) (3.12.1)\n",
            "Requirement already satisfied: tqdm>=4.27 in /Users/brandon/opt/anaconda3/envs/py/lib/python3.7/site-packages (from transformers) (4.65.0)\n",
            "Requirement already satisfied: safetensors>=0.3.1 in /Users/brandon/opt/anaconda3/envs/py/lib/python3.7/site-packages (from transformers) (0.3.1)\n",
            "Requirement already satisfied: pyyaml>=5.1 in /Users/brandon/opt/anaconda3/envs/py/lib/python3.7/site-packages (from transformers) (6.0)\n",
            "Requirement already satisfied: numpy>=1.17 in /Users/brandon/opt/anaconda3/envs/py/lib/python3.7/site-packages (from transformers) (1.21.5)\n",
            "Requirement already satisfied: importlib-metadata in /Users/brandon/opt/anaconda3/envs/py/lib/python3.7/site-packages (from transformers) (4.11.3)\n",
            "Requirement already satisfied: huggingface-hub<1.0,>=0.14.1 in /Users/brandon/opt/anaconda3/envs/py/lib/python3.7/site-packages (from transformers) (0.15.1)\n",
            "Requirement already satisfied: tokenizers!=0.11.3,<0.14,>=0.11.1 in /Users/brandon/opt/anaconda3/envs/py/lib/python3.7/site-packages (from transformers) (0.13.3)\n",
            "Requirement already satisfied: typing-extensions>=3.7.4.3 in /Users/brandon/opt/anaconda3/envs/py/lib/python3.7/site-packages (from huggingface-hub<1.0,>=0.14.1->transformers) (4.3.0)\n",
            "Requirement already satisfied: fsspec in /Users/brandon/opt/anaconda3/envs/py/lib/python3.7/site-packages (from huggingface-hub<1.0,>=0.14.1->transformers) (2023.1.0)\n",
            "Requirement already satisfied: zipp>=0.5 in /Users/brandon/opt/anaconda3/envs/py/lib/python3.7/site-packages (from importlib-metadata->transformers) (3.11.0)\n",
            "Requirement already satisfied: charset-normalizer<4,>=2 in /Users/brandon/opt/anaconda3/envs/py/lib/python3.7/site-packages (from requests->transformers) (3.1.0)\n",
            "Requirement already satisfied: certifi>=2017.4.17 in /Users/brandon/opt/anaconda3/envs/py/lib/python3.7/site-packages (from requests->transformers) (2022.12.7)\n",
            "Requirement already satisfied: idna<4,>=2.5 in /Users/brandon/opt/anaconda3/envs/py/lib/python3.7/site-packages (from requests->transformers) (3.4)\n",
            "Requirement already satisfied: urllib3<1.27,>=1.21.1 in /Users/brandon/opt/anaconda3/envs/py/lib/python3.7/site-packages (from requests->transformers) (1.26.15)\n",
            "Requirement already satisfied: moviepy in /Users/brandon/opt/anaconda3/envs/py/lib/python3.7/site-packages (1.0.3)\n",
            "Requirement already satisfied: numpy in /Users/brandon/opt/anaconda3/envs/py/lib/python3.7/site-packages (from moviepy) (1.21.5)\n",
            "Requirement already satisfied: imageio<3.0,>=2.5 in /Users/brandon/opt/anaconda3/envs/py/lib/python3.7/site-packages (from moviepy) (2.31.0)\n",
            "Requirement already satisfied: tqdm<5.0,>=4.11.2 in /Users/brandon/opt/anaconda3/envs/py/lib/python3.7/site-packages (from moviepy) (4.65.0)\n",
            "Requirement already satisfied: requests<3.0,>=2.8.1 in /Users/brandon/opt/anaconda3/envs/py/lib/python3.7/site-packages (from moviepy) (2.29.0)\n",
            "Requirement already satisfied: decorator<5.0,>=4.0.2 in /Users/brandon/opt/anaconda3/envs/py/lib/python3.7/site-packages (from moviepy) (4.4.2)\n",
            "Requirement already satisfied: imageio-ffmpeg>=0.2.0 in /Users/brandon/opt/anaconda3/envs/py/lib/python3.7/site-packages (from moviepy) (0.4.8)\n",
            "Requirement already satisfied: proglog<=1.0.0 in /Users/brandon/opt/anaconda3/envs/py/lib/python3.7/site-packages (from moviepy) (0.1.10)\n",
            "Requirement already satisfied: pillow>=8.3.2 in /Users/brandon/opt/anaconda3/envs/py/lib/python3.7/site-packages (from imageio<3.0,>=2.5->moviepy) (9.5.0)\n",
            "Requirement already satisfied: urllib3<1.27,>=1.21.1 in /Users/brandon/opt/anaconda3/envs/py/lib/python3.7/site-packages (from requests<3.0,>=2.8.1->moviepy) (1.26.15)\n",
            "Requirement already satisfied: idna<4,>=2.5 in /Users/brandon/opt/anaconda3/envs/py/lib/python3.7/site-packages (from requests<3.0,>=2.8.1->moviepy) (3.4)\n",
            "Requirement already satisfied: charset-normalizer<4,>=2 in /Users/brandon/opt/anaconda3/envs/py/lib/python3.7/site-packages (from requests<3.0,>=2.8.1->moviepy) (3.1.0)\n",
            "Requirement already satisfied: certifi>=2017.4.17 in /Users/brandon/opt/anaconda3/envs/py/lib/python3.7/site-packages (from requests<3.0,>=2.8.1->moviepy) (2022.12.7)\n",
            "Requirement already satisfied: pydub in /Users/brandon/opt/anaconda3/envs/py/lib/python3.7/site-packages (0.25.1)\n",
            "Requirement already satisfied: srt in /Users/brandon/opt/anaconda3/envs/py/lib/python3.7/site-packages (3.5.3)\n"
          ]
        }
      ],
      "source": [
        "!pip install torchaudio\n",
        "!pip install transformers\n",
        "!pip install moviepy\n",
        "!pip install pydub\n",
        "!pip install srt\n"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "id": "Z2Cebo-TGtbM",
        "outputId": "a9026de5-b008-4a2d-ebe8-8cd0a9d3b996"
      },
      "outputs": [
        {
          "name": "stderr",
          "output_type": "stream",
          "text": [
            "/Users/brandon/opt/anaconda3/envs/py/lib/python3.7/site-packages/tqdm/auto.py:21: TqdmWarning: IProgress not found. Please update jupyter and ipywidgets. See https://ipywidgets.readthedocs.io/en/stable/user_install.html\n",
            "  from .autonotebook import tqdm as notebook_tqdm\n"
          ]
        }
      ],
      "source": [
        "import torch\n",
        "from transformers import Wav2Vec2ForCTC, Wav2Vec2Tokenizer, Wav2Vec2Processor\n",
        "import torchaudio\n",
        "from moviepy.editor import VideoFileClip\n",
        "from pydub import AudioSegment\n",
        "from pydub.silence import split_on_silence\n",
        "import srt\n",
        "import datetime as dt"
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "from google.colab import files\n",
        "\n",
        "files.upload()"
      ],
      "metadata": {
        "id": "SKLI3P01sQ_B"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "id": "BmVhhOGKGtbN",
        "outputId": "80ee5c13-c7df-4229-d610-8437ff47668d"
      },
      "outputs": [
        {
          "name": "stdout",
          "output_type": "stream",
          "text": [
            "MoviePy - Writing audio in audio.wav\n"
          ]
        },
        {
          "name": "stderr",
          "output_type": "stream",
          "text": [
            "                                                                      "
          ]
        },
        {
          "name": "stdout",
          "output_type": "stream",
          "text": [
            "MoviePy - Done.\n"
          ]
        },
        {
          "name": "stderr",
          "output_type": "stream",
          "text": [
            "\r"
          ]
        }
      ],
      "source": [
        "VIDEO_PATH = '/Users/brandon/Downloads/Small Talk _ Everyday English (1080p_24fps_H264-128kbit_AAC).mp4'\n",
        "# VIDEO_PATH = '/Users/brandon/Downloads/Donald Trump calls indictment a âpolitical hit jobâ.mp4'\n",
        "video = VideoFileClip(VIDEO_PATH)\n",
        "video.audio.write_audiofile('audio.wav')"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "id": "sIP4Pp98GtbO",
        "outputId": "cd91e29f-1392-48e5-d7d8-c2f3ac872350"
      },
      "outputs": [
        {
          "name": "stderr",
          "output_type": "stream",
          "text": [
            "The tokenizer class you load from this checkpoint is not the same type as the class this function is called from. It may result in unexpected tokenization. \n",
            "The tokenizer class you load from this checkpoint is 'Wav2Vec2CTCTokenizer'. \n",
            "The class this function is called from is 'Wav2Vec2Tokenizer'.\n",
            "Some weights of Wav2Vec2ForCTC were not initialized from the model checkpoint at facebook/wav2vec2-large-960h and are newly initialized: ['wav2vec2.masked_spec_embed']\n",
            "You should probably TRAIN this model on a down-stream task to be able to use it for predictions and inference.\n"
          ]
        }
      ],
      "source": [
        "# Define the transcribe function\n",
        "# tokenizer = Wav2Vec2Tokenizer.from_pretrained(\"facebook/wav2vec2-base-960h\")\n",
        "# model = Wav2Vec2ForCTC.from_pretrained(\"facebook/wav2vec2-base-960h\")\n",
        "# processor = Wav2Vec2Processor.from_pretrained(\"facebook/wav2vec2-base-960h\")\n",
        "\n",
        "# tokenizer = Wav2Vec2Tokenizer.from_pretrained(\"facebook/wav2vec2-large-960h\")\n",
        "model = Wav2Vec2ForCTC.from_pretrained(\"facebook/wav2vec2-large-960h\")\n",
        "processor = Wav2Vec2Processor.from_pretrained(\"facebook/wav2vec2-large-960h\")\n"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "id": "YmoIfI2YGtbP"
      },
      "outputs": [],
      "source": [
        "def transcribe(audio: torch.Tensor):\n",
        "    # Ensure the tensor is 2D\n",
        "    audio = audio.squeeze()\n",
        "\n",
        "    # Transcribe the audio\n",
        "    input_values = processor(audio, return_tensors=\"pt\", sampling_rate=16000).input_values\n",
        "    logits = model(input_values).logits\n",
        "    predicted_ids = torch.argmax(logits, dim=-1)\n",
        "\n",
        "    # Decode the transcription\n",
        "    transcription = processor.decode(predicted_ids[0])\n",
        "    return transcription\n",
        "\n",
        "# Load and resample the audio file\n",
        "waveform, sample_rate = torchaudio.load('audio.wav')\n",
        "waveform = torchaudio.transforms.Resample(orig_freq=sample_rate, new_freq=16000)(waveform)\n",
        "\n",
        "# Make sure audio is mono\n",
        "if waveform.shape[0] > 1:\n",
        "    waveform = waveform.mean(dim=0, keepdim=True)"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "id": "dd89ukRuGtbP",
        "outputId": "1133a194-03d6-4671-9f4a-6d9c2c4a59b3"
      },
      "outputs": [
        {
          "name": "stderr",
          "output_type": "stream",
          "text": [
            "[W NNPACK.cpp:53] Could not initialize NNPACK! Reason: Unsupported hardware.\n"
          ]
        }
      ],
      "source": [
        "# Split audio into non-silent chunks\n",
        "sound = AudioSegment.from_file('audio.wav')\n",
        "chunks = split_on_silence(sound, min_silence_len=1000, silence_thresh=-40)  # Adjust parameters as needed\n",
        "# chunks = split_on_silence(sound, min_silence_len=1000, silence_thresh=-39)\n",
        "\n",
        "\n",
        "# Transcribe each chunk\n",
        "subs = []\n",
        "cumulative_duration = 0\n",
        "for i, chunk in enumerate(chunks):\n",
        "    chunk_duration = len(chunk) / 1000  # Convert from milliseconds to seconds\n",
        "    start_time = cumulative_duration\n",
        "    end_time = cumulative_duration + chunk_duration\n",
        "\n",
        "    start_samples = int(start_time * 16000)\n",
        "    end_samples = int(end_time * 16000)\n",
        "\n",
        "    audiotext_resampled = waveform[0, start_samples:end_samples]\n",
        "    audiotext_resampled = audiotext_resampled.unsqueeze(0)\n",
        "\n",
        "    try:\n",
        "        word = transcribe(audiotext_resampled)\n",
        "        subs.append(srt.Subtitle(index=i, start=dt.timedelta(seconds=start_time), end=dt.timedelta(seconds=end_time), content=word))\n",
        "    except Exception as e:\n",
        "        print(e)\n",
        "\n",
        "    cumulative_duration += chunk_duration"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "id": "JeQpvvV-GtbQ",
        "outputId": "c1ecfc95-b9de-4fed-e3a3-657b0c56c0af"
      },
      "outputs": [
        {
          "name": "stdout",
          "output_type": "stream",
          "text": [
            "1\n",
            "00:00:11,796 --> 00:00:15,020\n",
            "SO WHAT'S NEW MARK\n",
            "\n",
            "2\n",
            "00:00:15,020 --> 00:00:18,788\n",
            "HOW IS YOUR NEW JOB GOIN TO BE HONEST\n",
            "\n",
            "3\n",
            "00:00:18,788 --> 00:00:21,059\n",
            "I CAN'T COMPLAIN\n",
            "\n",
            "4\n",
            "00:00:21,059 --> 00:00:24,188\n",
            "I REALLY LOVE THE COMPANY THAT I AM WORK\n",
            "\n",
            "5\n",
            "00:00:24,188 --> 00:00:26,173\n",
            "KING FOUR\n",
            "\n",
            "6\n",
            "00:00:26,173 --> 00:00:27,770\n",
            "MY CO WORKERS ARE AL\n",
            "\n",
            "7\n",
            "00:00:27,770 --> 00:00:28,423\n",
            "ALL REALLY\n",
            "\n",
            "8\n",
            "00:00:28,423 --> 00:00:29,242\n",
            "FRIENDLY AND\n",
            "\n",
            "9\n",
            "00:00:29,242 --> 00:00:34,295\n",
            "HELPFUL THEY REALLY HELP ME FEEL WELCOME IT'\n",
            "\n",
            "10\n",
            "00:00:34,295 --> 00:00:37,264\n",
            "S A REALLY ENERGETIC AND FUN ATMOSPHERE\n",
            "\n",
            "11\n",
            "00:00:37,264 --> 00:00:39,650\n",
            "MY BOSS IS HALL\n",
            "\n",
            "12\n",
            "00:00:39,650 --> 00:00:42,671\n",
            "AREUS AND HE IS REALLY FLEXIBLE\n",
            "\n",
            "13\n",
            "00:00:42,671 --> 00:00:46,717\n",
            "REALLY HOW SO\n",
            "\n",
            "14\n",
            "00:00:46,717 --> 00:00:48,420\n",
            "HE ALLOWS\n",
            "\n",
            "15\n",
            "00:00:48,420 --> 00:00:56,992\n",
            "ME TO COME IN WHEN I WANT AND MAKE MY OWN HOURS I CAN ALSO LEAVE EARLY IF I START EARLY\n",
            "\n",
            "16\n",
            "00:00:56,992 --> 00:00:58,913\n",
            "THERE IS NO REA\n",
            "\n",
            "17\n",
            "00:00:58,913 --> 00:01:00,643\n",
            "LED DRASS CODE EITHER\n",
            "\n",
            "18\n",
            "00:01:00,643 --> 00:01:03,821\n",
            "I CAN WEAR GEANS AND A TEASHIRT IF I W\n",
            "\n",
            "19\n",
            "00:01:03,821 --> 00:01:08,619\n",
            "AUNT I CAN EVEN WEAR SHORTS IN THE SUMMER\n",
            "\n",
            "20\n",
            "00:01:08,619 --> 00:01:09,227\n",
            "NOW\n",
            "\n",
            "21\n",
            "00:01:09,227 --> 00:01:10,528\n",
            "ITS SOUND\n",
            "\n",
            "22\n",
            "00:01:10,528 --> 00:01:12,254\n",
            "SREALLY COOL\n",
            "\n",
            "23\n",
            "00:01:12,254 --> 00:01:14,686\n",
            "I CAN'T STAND WEARING I\n",
            "\n",
            "24\n",
            "00:01:14,686 --> 00:01:16,704\n",
            "SUIT EVERY DAY W\n",
            "\n",
            "25\n",
            "00:01:16,704 --> 00:01:18,705\n",
            "ICH DO YOU PREFER WH\n",
            "\n",
            "26\n",
            "00:01:18,705 --> 00:01:23,476\n",
            "ORKING LATE OR FINISHING EARLY I PREFER FINISHING E\n",
            "\n",
            "27\n",
            "00:01:23,476 --> 00:01:27,570\n",
            "EARLY I REALLY ENJOYED THE MORNING\n",
            "\n",
            "28\n",
            "00:01:27,570 --> 00:01:31,365\n",
            "I LOVE GETTING UP EARLY AND GOING FOR A RUN\n",
            "\n",
            "\n"
          ]
        }
      ],
      "source": [
        "# Generate the subtitles\n",
        "srt_content = srt.compose(subs)\n",
        "print(srt_content)"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "id": "muCfj-KVGtbQ"
      },
      "outputs": [],
      "source": [
        "# bikin file .srt\n",
        "filesub = open(\"subtitles.srt\", \"w\")\n",
        "filesub.write(srt.compose(subs))\n",
        "filesub.close()"
      ]
    }
  ],
  "metadata": {
    "kernelspec": {
      "display_name": "py",
      "language": "python",
      "name": "python3"
    },
    "language_info": {
      "codemirror_mode": {
        "name": "ipython",
        "version": 3
      },
      "file_extension": ".py",
      "mimetype": "text/x-python",
      "name": "python",
      "nbconvert_exporter": "python",
      "pygments_lexer": "ipython3",
      "version": "3.7.16"
    },
    "orig_nbformat": 4,
    "colab": {
      "provenance": []
    }
  },
  "nbformat": 4,
  "nbformat_minor": 0
}
